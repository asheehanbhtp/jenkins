AWSTemplateFormatVersion: 2010-09-09
Parameters:
  BaseRoute:
    Type: String
    Default: '/'
  Cluster:
    Type: String
  ExecutionRoleArn:
    Type: String
  ImageUri:
    Type: String
  ListenerArn:
    Type: String
  ListenerRulePriority:
    Type: Number
  SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  VpcId:
    Type: AWS::EC2::VPC::Id
Resources:
  ListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            - !Join
              - ''
              - - !Ref BaseRoute
                - '*'
      ListenerArn: !Ref ListenerArn
      Priority: !Ref ListenerRulePriority
  TaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      # Volumes:
      #   - Volume Definition
      Cpu: '256'
      ExecutionRoleArn: !Ref ExecutionRoleArn
      Family: !Join
        - '-'
        - - !Ref AWS::Region
          - !Ref AWS::StackName
          - 'task'
      Memory: 512
      NetworkMode: 'awsvpc'
      # PlacementConstraints:
      #   - TaskDefinitionPlacementConstraint
      RequiresCompatibilities:
        - 'FARGATE'
      # TaskRoleArn: String
      ContainerDefinitions:
        -
          # Command:
          #   - String
          # Cpu: Integer
          # DisableNetworking: Boolean
          # DnsSearchDomains:
          #   - String
          # DnsServers:
          #   - String
          # DockerLabels:
          #   String: String
          # DockerSecurityOptions:
          #   - String
          # EntryPoint:
          #   - String
          # Environment:
          #   - KeyValuePair
          Essential: true
          # ExtraHosts:
          #   - HostEntry
          # Hostname: String
          Image: !Ref ImageUri
          # Links:
          #   - String
          # LinuxParameters:
          #   LinuxParameters
          # LogConfiguration:
          #   LogConfiguration
          Memory: 512
          # MemoryReservation: Integer
          # MountPoints:
          #   - MountPoint
          Name: !Join
            - '-'
            - - !Ref AWS::Region
              - !Ref AWS::StackName
              - 'container'
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
          # Privileged: Boolean
          # ReadonlyRootFilesystem: Boolean
          # Ulimits:
          #   - Ulimit
          # User: String
          # VolumesFrom:
          #   - VolumeFrom
          # WorkingDirectory: String
  TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: !Join
        - ''
        - - !Ref BaseRoute
          - '/status'
      HealthCheckPort: 'traffic-port'
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: !Join
        - '-'
        - - !Ref AWS::Region
          - !Ref AWS::StackName
          - 'tg'
      Port: 80
      Protocol: HTTP
      # Tags:
      #   - Resource Tag
      # TargetGroupAttributes:
      #   - TargetGroupAttributes
      # Targets:
      #   - TargetDescription
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcId
  Service:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref Cluster
      # DeploymentConfiguration:
      #   DeploymentConfiguration
      DesiredCount: 1
      LaunchType: 'FARGATE'
      LoadBalancers:
        -
          ContainerName: !Join
            - '-'
            - - !Ref AWS::Region
              - !Ref AWS::StackName
              - 'container'
          ContainerPort: 80
          # LoadBalancerName: String
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: !Ref SecurityGroups
          Subnets: !Ref Subnets
      # PlacementConstraints:
      # - PlacementConstraints, ...
      # PlacementStrategies:
      # - PlacementStrategies, ...
      # PlatformVersion: String
      # Role: String
      ServiceName: !Join
        - '-'
        - - !Ref AWS::Region
          - !Ref AWS::StackName
          - 'service'
      TaskDefinition: !Ref TaskDefinition
